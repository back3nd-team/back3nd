name: Build, Tag, and Publish Docker Image with Versioning

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      # Step 1: Check out the repository
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Garantir que todas as tags e commits sejam buscados

      # Step 2: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN2025 }}

      # Step 3: Create Git Tag
      - name: Create Git Tag
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          default_bump: patch # Bump patch por padrão
          with_v: false # Remover prefixo `v`
          prerelease: false # Criar uma tag regular, não pré-release
          verbose: true # Ativar logs detalhados

      # Step 4: Build Docker Image
      - name: Build Docker image
        run: |
          echo "Building Docker image with version: ${{ steps.github_tag.outputs.new_tag }}"
          docker build -f Docker/Dockerfile -t ghcr.io/${{ github.repository_owner }}/back3nd:${{ steps.github_tag.outputs.new_tag }} .

      # Step 5: Push Docker Image
      - name: Push Docker image
        run: |
          echo "Pushing Docker image with version: ${{ steps.github_tag.outputs.new_tag }}"
          docker push ghcr.io/${{ github.repository_owner }}/back3nd:${{ steps.github_tag.outputs.new_tag }}

      # Step 6: Create GitHub Release
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.github_tag.outputs.new_tag }}
          release_name: 'Release ${{ steps.github_tag.outputs.new_tag }}'
          body: |
            ## Changes
            - Docker image built and pushed with version: `${{ steps.github_tag.outputs.new_tag }}`
          draft: false
          prerelease: false

name: Build, Tag, and Publish Docker Image with Versioning

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out repository
        uses: actions/checkout@v3

      # Step 2: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN2025 }}

      # Step 3: Get Current Version
      - name: Get Current Version
        id: get_version
        run: |
          VERSION_FILE="VERSION"
          if [ ! -f "$VERSION_FILE" ]; then
            echo "0.1.0-alpha" > $VERSION_FILE
          else
            VERSION=$(cat $VERSION_FILE | sed 's/-alpha//')
            IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
            PATCH=$((PATCH + 1))
            echo "${MAJOR}.${MINOR}.${PATCH}-alpha" > $VERSION_FILE
          fi
          echo "VERSION=$(cat $VERSION_FILE)" >> $GITHUB_ENV

      # Step 4: Build Docker Image
      - name: Build Docker image
        run: |
          echo "Building Docker image with version: ${{ env.VERSION }}"
          docker build -f Docker/Dockerfile -t ghcr.io/${{ github.repository_owner }}/back3nd:${{ env.VERSION }} .

      # Step 5: Push Docker Image
      - name: Push Docker image
        run: |
          echo "Pushing Docker image with version: ${{ env.VERSION }}"
          docker push ghcr.io/${{ github.repository_owner }}/back3nd:${{ env.VERSION }}

      # Step 6: Commit New Version File
      - name: Commit New Version
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add VERSION
          git commit -m "chore: bump version to ${{ env.VERSION }}"
          git push origin main

      # Step 7: Create GitHub Release
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: "Release ${{ env.VERSION }}"
          body: |
            ## Changes
            - Docker image built and pushed with version: `${{ env.VERSION }}`
          draft: false
          prerelease: true

name: Build and Publish Docker Image
on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/back3nd

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Log in to GitHub Container Registry
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN2025 }}

      # Step 3: Get Current Tags from GHCR
      - name: Get Current Version
        id: get_version
        run: |
          echo "Fetching current tags from GHCR..."
          RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.TOKEN2025 }}" \
            https://${{ env.REGISTRY }}/v2/${{ env.IMAGE_NAME }}/tags/list)
          if [ -z "$RESPONSE" ] || [ "$RESPONSE" == "null" ]; then
            echo "No tags found in GHCR."
            echo "CURRENT_TAGS=none" >> $GITHUB_ENV
          else
            IMAGE_TAGS=$(echo "$RESPONSE" | jq -r '.tags | join(",")')
            if [ -z "$IMAGE_TAGS" ]; then
              echo "No tags found in GHCR."
              echo "CURRENT_TAGS=none" >> $GITHUB_ENV
            else
              echo "CURRENT_TAGS=$IMAGE_TAGS" >> $GITHUB_ENV
              echo "Current tags: $IMAGE_TAGS"
            fi
          fi

      # Step 4: Get Commit Hash
      - name: Get Commit Hash
        id: get_commit
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      # Step 5: Build Docker Image
      - name: Build Docker image
        run: |
          docker build . \
            --file Docker/Dockerfile \
            --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${COMMIT_HASH}

      # Step 6: Push Docker Image
      - name: Push Docker image
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${COMMIT_HASH}

name: Build, Tag, and Publish Docker Image with Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out repository
        uses: actions/checkout@v3

      # Step 2: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN2025 }}

      # Step 3: Get Commit Hash
      - name: Get Commit Hash
        id: get_commit
        run: |
          echo "Fetching the latest commit hash..."
          echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      # Step 4: Build Docker Image
      - name: Build Docker image
        run: |
          echo "Building Docker image with tag: ${COMMIT_HASH}"
          docker build -f Docker/Dockerfile -t ghcr.io/${{ github.repository_owner }}/back3nd:${COMMIT_HASH} .

      # Step 5: Push Docker Image
      - name: Push Docker image
        run: |
          echo "Pushing Docker image to GHCR with tag: ${COMMIT_HASH}"
          docker push ghcr.io/${{ github.repository_owner }}/back3nd:${COMMIT_HASH}

      # Step 6: Create a Git Tag
      - name: Create Git Tag
        uses: anothrNick/github-tag-action@1.57.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_prefix: "v" # Prefix for the tag (e.g., v1.0.0)
          message: "Release for commit ${{ env.COMMIT_HASH }}"
          commitish: "${{ env.COMMIT_HASH }}" # Commit hash for the tag

      # Step 7: Create GitHub Release
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.COMMIT_HASH }}
          release_name: "Release v${{ env.COMMIT_HASH }}"
          body: |
            ## Changes
            - Docker image built and pushed with commit hash: `${{ env.COMMIT_HASH }}`
          draft: false
          prerelease: false
